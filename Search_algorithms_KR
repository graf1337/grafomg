#Jump Search

import math
def jump_search(arr, x):
    n = len(arr)
    step = int(math.sqrt(n))
    prev = 0
    while arr[min(step, n) - 1] < x:
        prev = step
        step += int(math.sqrt(n))
        if prev >= n:
            return -1
    while arr[prev] < x:
        prev += 1
        if prev == min(step, n):
            return -1
    if arr[prev] == x:
        return prev
    return -1
arr = [1, 3, 5, 7, 9, 11, 13, 15]
x = 7
print("Массив:", arr)
index = jump_search(arr, x)
print(f"Элемент {x} найден на позиции:", index)

#Expontetional Search

def exponential_search(arr, x):
    if arr[0] == x:
        return 0
    i = 1
    n = len(arr)
    while i < n and arr[i] <= x:
        i *= 2
    low = i // 2
    high = min(i, n-1)
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == x:
            return mid
        elif arr[mid] < x:
            low = mid + 1
        else:
            high = mid - 1
    return -1
arr = [1, 2, 4, 8, 16, 32, 64]
x = 16
print("Массив:", arr)
index = exponential_search(arr, x)
print(f"Элемент {x} найден на позиции:", index)

#Ternary Search

def ternary_search(arr, l, r, x):
    if r >= l:
        mid1 = l + (r - l) // 3
        mid2 = r - (r - l) // 3
        if arr[mid1] == x:
            return mid1
        if arr[mid2] == x:
            return mid2
        if x < arr[mid1]:
            return ternary_search(arr, l, mid1 - 1, x)
        elif x > arr[mid2]:
            return ternary_search(arr, mid2 + 1, r, x)
        else:
            return ternary_search(arr, mid1 + 1, mid2 - 1, x)
    return -1
arr = [2, 4, 6, 8, 10, 12, 14, 16]
x = 10
print("Массив:", arr)
index = ternary_search(arr, 0, len(arr) - 1, x)
print(f"Элемент {x} найден на позиции:", index)
